{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,ECGX,IAAMgB,EAAQC,SAASC,cAAc,aAC/BC,EAASF,SAASC,cAAc,cAIhCE,GAHOH,SAASC,cAAc,cACtBD,SAASC,cAAc,eACrBD,SAASC,cAAc,iBACvBD,SAASC,cAAc,kBA2CjCG,EAAQ,IAAX,W,sBAxCGC,EACUC,G,IAAAC,EAAAD,EAACC,O,aACTC,KAAKC,UAAW,EACZD,KAAKE,QAAU,KACfF,KAAKD,OAASA,C,iBAGtBb,IAAA,Q,MAAA,W,WACUiB,EAAYC,KAAKC,MACnBL,KAAKC,WAGTD,KAAKE,QAAUI,aAAY,WACvBC,EAAKN,UAAW,EAChB,IACMO,EADcJ,KAAKC,MACOF,EAC1BM,EAAgBF,EAAKG,iBAAiBF,GAE5CD,EAAKR,OAAOU,E,GACd,K,IAGNvB,IAAA,O,MAAA,WACIc,KAAKC,UAAW,EAChBU,cAAcX,KAAKE,Q,IAIvBhB,IAAA,M,MAAA,SAAId,GACA,OAAOwC,OAAOxC,GAAOyC,SAAS,EAAG,I,IAGrC3B,IAAA,mB,MAAA,SAAiB4B,GAIT,MAAO,CAACC,MAHEf,KAAKgB,IAAIC,KAAKC,MAAMJ,EAAS,MAAyB,OAGjDK,KAFNnB,KAAKgB,IAAIC,KAAKC,MAAMJ,EAAS,KAAoB,MAErCM,KADZpB,KAAKgB,IAAIC,KAAKC,MAAOJ,EAAQ,IAAa,M,OAK5D,GAAW,CAAU,CACpBf,OAKJ,SAAyBD,KAAEiB,MAAFjB,EAASqB,K,IAAMC,EAAftB,EAAesB,KACpCzB,EAAQ0B,YAAcD,C,IAG1B1B,EAAS4B,iBAAiB,QAAS1B,EAAM2B,MAAMC,KAAK5B,IAEpDL,EAAQ+B,iBAAiB,QAAS1B,EAAM6B,KAAKD,KAAK5B,G","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/data-timer/data-timer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","// const date1 =  Date.now()\n// console.log(date1)\n\n// setTimeout(() => {\n//     const date2 =  Date.now()\n// console.log(date2)\n//     const dif = date2 - date1\n//     console.log(dif)\n// },6000)\n\n\nconst stopBtn=document.querySelector('.stop-btn')\nconst startBtn=document.querySelector('.start-btn')\nconst days = document.querySelector('[data-days')\nconst hours = document.querySelector('[data-hours')\nconst minutes = document.querySelector('[data-minutes')\nconst seconds = document.querySelector('[data-seconds')\n\n\nclass Timer{\n    constructor({onTick}) {\n        this.isActive = false,\n            this.timerId = null,\n            this.onTick = onTick\n    }\n\n    start() {\n        const startTime = Date.now()\n        if (this.isActive) {\n            return\n        }\n        this.timerId = setInterval(() => {\n            this.isActive = true\n            const currentTime = Date.now()\n            const deltaTime = currentTime - startTime\n            const componentTime = this.getTimeComponent(deltaTime)\n\n            this.onTick(componentTime)\n        },1000)\n    }\n\n    stop() {\n        this.isActive = false\n        clearInterval(this.timerId)\n    }\n    \n    \n    pad(value) {\n        return String(value).padStart(2, \"0\")\n}\n\n    getTimeComponent(time) {\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)))\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)))\n        const secs = this.pad(Math.floor((time % (1000 * 60) / 1000)))\n            return {hours, mins, secs}\n}\n}\n\nconst timer = new Timer({\n    onTick: updateComponent,\n\n})\n\n\nfunction updateComponent({ hours, mins, secs }) {\n    seconds.textContent = secs\n}\n\nstartBtn.addEventListener('click', timer.start.bind(timer))\n\nstopBtn.addEventListener('click', timer.stop.bind(timer))\n\n\n/*\nconst timer = {\n    isActive: false,\n    timerId: null,\n\n    start() {\n        const startTime = Date.now()\n           if (this.isActive) {\n                return\n            }\n        this.timerId = setInterval(() => {\n \n            this.isActive = true\n            const currentTime = Date.now()\n            const deltaTime = currentTime - startTime\n            const componentTime = getTimeComponent(deltaTime)\n            console.log( getTimeComponent(deltaTime))\n            updateComponent(componentTime)\n        }, 1000)\n    },\n    stop() {\n        this.isActive = false\n        clearInterval(this.timerId)\n    }\n}\n\n\nstartBtn.addEventListener('click', () => {\n    timer.start()\n})\n\nstopBtn.addEventListener('click', () => {\n    timer.stop()\n})\n\nfunction pad(value) {\n    return String(value).padStart(2, \"0\")\n}\n\nfunction getTimeComponent(time) {\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)))\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)))\n    const secs = pad(Math.floor((time % (1000 * 60) / 1000)))\n    return {hours, mins, secs}\n}\n\nfunction updateComponent({ hours, mins, secs }) {\n    seconds.textContent = secs\n}*/"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$0eb94e29083ac056$var$stopBtn","document","querySelector","$0eb94e29083ac056$var$startBtn","$0eb94e29083ac056$var$seconds","$0eb94e29083ac056$var$timer","Timer","param","onTick","this","isActive","timerId","startTime","Date","now","setInterval","_this","deltaTime","componentTime","getTimeComponent","clearInterval","String","padStart","time","hours","pad","Math","floor","mins","secs","textContent","addEventListener","start","bind","stop"],"version":3,"file":"data-timer.3de95873.js.map"}