{"mappings":"AAWA,MAAMA,EAAQC,SAASC,cAAc,aAC/BC,EAASF,SAASC,cAAc,cAIhCE,GAHOH,SAASC,cAAc,cACtBD,SAASC,cAAc,eACrBD,SAASC,cAAc,iBACvBD,SAASC,cAAc,kBA2CvC,MAAMG,EAAQ,IAxCd,MACIC,aAAYC,OAACA,IACTC,KAAKC,UAAW,EACZD,KAAKE,QAAU,KACfF,KAAKD,OAASA,C,CAGtBI,QACI,MAAMC,EAAYC,KAAKC,MACnBN,KAAKC,WAGTD,KAAKE,QAAUK,aAAY,KACvBP,KAAKC,UAAW,EAChB,MACMO,EADcH,KAAKC,MACOF,EAC1BK,EAAgBT,KAAKU,iBAAiBF,GAE5CR,KAAKD,OAAOU,EAAc,GAC5B,K,CAGNE,OACIX,KAAKC,UAAW,EAChBW,cAAcZ,KAAKE,Q,CAIvBW,IAAIC,GACA,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAGrCN,iBAAiBO,GAIT,MAAO,CAACC,MAHElB,KAAKa,IAAIM,KAAKC,MAAMH,EAAS,MAAyB,O,KACvDjB,KAAKa,IAAIM,KAAKC,MAAMH,EAAS,KAAoB,M,KACjDjB,KAAKa,IAAIM,KAAKC,MAAOH,EAAQ,IAAa,M,GAKvC,CACpBlB,OAKJ,UAAyBmB,MAAEA,EAAKG,KAAEA,EAAIC,KAAEA,IACpC1B,EAAQ2B,YAAcD,C,IAG1B3B,EAAS6B,iBAAiB,QAAS3B,EAAMM,MAAMsB,KAAK5B,IAEpDL,EAAQgC,iBAAiB,QAAS3B,EAAMc,KAAKc,KAAK5B","sources":["src/data-timer/data-timer.js"],"sourcesContent":["// const date1 =  Date.now()\n// console.log(date1)\n\n// setTimeout(() => {\n//     const date2 =  Date.now()\n// console.log(date2)\n//     const dif = date2 - date1\n//     console.log(dif)\n// },6000)\n\n\nconst stopBtn=document.querySelector('.stop-btn')\nconst startBtn=document.querySelector('.start-btn')\nconst days = document.querySelector('[data-days')\nconst hours = document.querySelector('[data-hours')\nconst minutes = document.querySelector('[data-minutes')\nconst seconds = document.querySelector('[data-seconds')\n\n\nclass Timer{\n    constructor({onTick}) {\n        this.isActive = false,\n            this.timerId = null,\n            this.onTick = onTick\n    }\n\n    start() {\n        const startTime = Date.now()\n        if (this.isActive) {\n            return\n        }\n        this.timerId = setInterval(() => {\n            this.isActive = true\n            const currentTime = Date.now()\n            const deltaTime = currentTime - startTime\n            const componentTime = this.getTimeComponent(deltaTime)\n\n            this.onTick(componentTime)\n        },1000)\n    }\n\n    stop() {\n        this.isActive = false\n        clearInterval(this.timerId)\n    }\n    \n    \n    pad(value) {\n        return String(value).padStart(2, \"0\")\n}\n\n    getTimeComponent(time) {\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)))\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)))\n        const secs = this.pad(Math.floor((time % (1000 * 60) / 1000)))\n            return {hours, mins, secs}\n}\n}\n\nconst timer = new Timer({\n    onTick: updateComponent,\n\n})\n\n\nfunction updateComponent({ hours, mins, secs }) {\n    seconds.textContent = secs\n}\n\nstartBtn.addEventListener('click', timer.start.bind(timer))\n\nstopBtn.addEventListener('click', timer.stop.bind(timer))\n\n\n/*\nconst timer = {\n    isActive: false,\n    timerId: null,\n\n    start() {\n        const startTime = Date.now()\n           if (this.isActive) {\n                return\n            }\n        this.timerId = setInterval(() => {\n \n            this.isActive = true\n            const currentTime = Date.now()\n            const deltaTime = currentTime - startTime\n            const componentTime = getTimeComponent(deltaTime)\n            console.log( getTimeComponent(deltaTime))\n            updateComponent(componentTime)\n        }, 1000)\n    },\n    stop() {\n        this.isActive = false\n        clearInterval(this.timerId)\n    }\n}\n\n\nstartBtn.addEventListener('click', () => {\n    timer.start()\n})\n\nstopBtn.addEventListener('click', () => {\n    timer.stop()\n})\n\nfunction pad(value) {\n    return String(value).padStart(2, \"0\")\n}\n\nfunction getTimeComponent(time) {\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)))\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)))\n    const secs = pad(Math.floor((time % (1000 * 60) / 1000)))\n    return {hours, mins, secs}\n}\n\nfunction updateComponent({ hours, mins, secs }) {\n    seconds.textContent = secs\n}*/"],"names":["$1da0fdb45e9d3432$var$stopBtn","document","querySelector","$1da0fdb45e9d3432$var$startBtn","$1da0fdb45e9d3432$var$seconds","$1da0fdb45e9d3432$var$timer","constructor","onTick","this","isActive","timerId","start","startTime","Date","now","setInterval","deltaTime","componentTime","getTimeComponent","stop","clearInterval","pad","value","String","padStart","time","hours","Math","floor","mins","secs","textContent","addEventListener","bind"],"version":3,"file":"data-timer.abc79fe6.js.map"}